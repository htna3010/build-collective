 struct Company{
     string name;
     address owner;
     uint256 balance;
     bool registered;
     mapping(address => User) members;
   }

   mapping(address => Company) private companies;

   event CompanySignedUp(address indexed companyAddress, Company indexed company);

   function company(address companyAddress) public view returns (Company memory){
     return companies[companyAddress];
   }

   function createCompany(string memory companyName) public returns (Company memory){
     require(bytes(companyName).length > 0);
     require(users[msg.sender].registered);
     companies[msg.sender] = Company(companyName, users[msg.sender].username, 0, true);
     emit CompanySignedUp(msg.sender, companies[msg.sender]);
     return companies[msg.sender];
   }


